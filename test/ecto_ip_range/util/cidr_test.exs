defmodule EctoIPRange.Util.CIDRTest do
  use ExUnit.Case, async: true

  doctest EctoIPRange.Util.CIDR, import: true

  alias EctoIPRange.Util.CIDR

  test "parse_ipv4" do
    inputs = [
      {32, {0, 0, 0, 0}},
      {28, {0, 0, 0, 15}},
      {24, {0, 0, 0, 255}},
      {20, {0, 0, 15, 255}},
      {16, {0, 0, 255, 255}},
      {12, {0, 15, 255, 255}},
      {8, {0, 255, 255, 255}},
      {4, {15, 255, 255, 255}},
      {0, {255, 255, 255, 255}}
    ]

    for {maskbits, range_end} <- inputs do
      assert {{0, 0, 0, 0}, ^range_end} = CIDR.parse_ipv4("0.0.0.0", maskbits)
    end
  end

  test "parse_ipv6" do
    inputs = [
      {128, {0, 0, 0, 0, 0, 0, 0, 0}},
      {120, {0, 0, 0, 0, 0, 0, 0, 255}},
      {112, {0, 0, 0, 0, 0, 0, 0, 65_535}},
      {104, {0, 0, 0, 0, 0, 0, 255, 65_535}},
      {96, {0, 0, 0, 0, 0, 0, 65_535, 65_535}},
      {88, {0, 0, 0, 0, 0, 255, 65_535, 65_535}},
      {80, {0, 0, 0, 0, 0, 65_535, 65_535, 65_535}},
      {72, {0, 0, 0, 0, 255, 65_535, 65_535, 65_535}},
      {64, {0, 0, 0, 0, 65_535, 65_535, 65_535, 65_535}},
      {56, {0, 0, 0, 255, 65_535, 65_535, 65_535, 65_535}},
      {48, {0, 0, 0, 65_535, 65_535, 65_535, 65_535, 65_535}},
      {40, {0, 0, 255, 65_535, 65_535, 65_535, 65_535, 65_535}},
      {32, {0, 0, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535}},
      {24, {0, 255, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535}},
      {16, {0, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535}},
      {8, {255, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535}},
      {0, {65_535, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535, 65_535}}
    ]

    for {maskbits, range_end} <- inputs do
      assert {{0, 0, 0, 0, 0, 0, 0, 0}, ^range_end} = CIDR.parse_ipv6("::", maskbits)
    end
  end
end
